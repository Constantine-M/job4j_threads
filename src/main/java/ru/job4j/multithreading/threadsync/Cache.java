package ru.job4j.multithreading.threadsync;

/**
 * Данный класс описывает один
 * из вариантов синхронизации
 * ресурсов.
 *
 * Чтобы добиться атомарности
 * неатомарных операций, в Java
 * используется механизм синхронизации.
 *
 * Код внутри метода, обозначенного
 * synchronized, называется критической
 * секцией. То есть это область памяти,
 * с которой одновременно может
 * работать только одна нить.
 * Виртуальная машина Java использует
 * механизм мониторов для регулирования
 * эксклюзивного доступа.
 *
 * Монитор может быть явный и неявный.
 * Здесь я использовал неявный
 * монитор. Здесь монитор будет
 * сам класс {@link Cache}.
 */
public class Cache {

    private static Cache cache;

    public static synchronized Cache instOf() {
        if (cache == null) {
            cache = new Cache();
        }
        return cache;
    }
}
